Start testing: Feb 25 05:16 UTC
----------------------------------------------------------
1/60 Testing: Pivot.Nominal
1/60 Test: Pivot.Nominal
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Nominal"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/llrec_tests
"Pivot.Nominal" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13222== Memcheck, a memory error detector
==13222== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13222== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13222== Command: /work/hw-melgart/hw3/hw3_stu_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Nominal
==13222== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Nominal
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Nominal
[       OK ] Pivot.Nominal (30 ms)
[----------] 1 test from Pivot (41 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (77 ms total)
[  PASSED  ] 1 test.
==13222== 
==13222== HEAP SUMMARY:
==13222==     in use at exit: 0 bytes in 0 blocks
==13222==   total heap usage: 198 allocs, 198 frees, 115,694 bytes allocated
==13222== 
==13222== All heap blocks were freed -- no leaks are possible
==13222== 
==13222== For lists of detected and suppressed errors, rerun with: -s
==13222== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.17 sec
----------------------------------------------------------
Test Passed.
"Pivot.Nominal" end time: Feb 25 05:16 UTC
"Pivot.Nominal" time elapsed: 00:00:02
----------------------------------------------------------

2/60 Testing: Filter.Size3_nF_F_nF
2/60 Test: Filter.Size3_nF_F_nF
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size3_nF_F_nF"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/llrec_tests
"Filter.Size3_nF_F_nF" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13223== Memcheck, a memory error detector
==13223== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13223== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13223== Command: /work/hw-melgart/hw3/hw3_stu_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size3_nF_F_nF
==13223== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size3_nF_F_nF
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size3_nF_F_nF
[       OK ] Filter.Size3_nF_F_nF (22 ms)
[----------] 1 test from Filter (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (60 ms total)
[  PASSED  ] 1 test.
==13223== 
==13223== HEAP SUMMARY:
==13223==     in use at exit: 0 bytes in 0 blocks
==13223==   total heap usage: 200 allocs, 200 frees, 115,835 bytes allocated
==13223== 
==13223== All heap blocks were freed -- no leaks are possible
==13223== 
==13223== For lists of detected and suppressed errors, rerun with: -s
==13223== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"Filter.Size3_nF_F_nF" end time: Feb 25 05:16 UTC
"Filter.Size3_nF_F_nF" time elapsed: 00:00:01
----------------------------------------------------------

3/60 Testing: Stack.BasicString
3/60 Test: Stack.BasicString
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.BasicString"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.BasicString" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13224== Memcheck, a memory error detector
==13224== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13224== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13224== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.BasicString
==13224== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.BasicString
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Stack
[ RUN      ] Stack.BasicString
[       OK ] Stack.BasicString (74 ms)
[----------] 1 test from Stack (81 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (106 ms total)
[  PASSED  ] 1 test.
==13224== 
==13224== HEAP SUMMARY:
==13224==     in use at exit: 0 bytes in 0 blocks
==13224==   total heap usage: 200 allocs, 200 frees, 116,220 bytes allocated
==13224== 
==13224== All heap blocks were freed -- no leaks are possible
==13224== 
==13224== For lists of detected and suppressed errors, rerun with: -s
==13224== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.67 sec
----------------------------------------------------------
Test Passed.
"Stack.BasicString" end time: Feb 25 05:16 UTC
"Stack.BasicString" time elapsed: 00:00:01
----------------------------------------------------------

4/60 Testing: Stack.RandomInt
4/60 Test: Stack.RandomInt
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.RandomInt"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.RandomInt" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13225== Memcheck, a memory error detector
==13225== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13225== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13225== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.RandomInt
==13225== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.RandomInt
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Stack
[ RUN      ] Stack.RandomInt
[       OK ] Stack.RandomInt (2075 ms)
[----------] 1 test from Stack (2081 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (2104 ms total)
[  PASSED  ] 1 test.
==13225== 
==13225== HEAP SUMMARY:
==13225==     in use at exit: 0 bytes in 0 blocks
==13225==   total heap usage: 21,234 allocs, 21,234 frees, 1,077,076 bytes allocated
==13225== 
==13225== All heap blocks were freed -- no leaks are possible
==13225== 
==13225== For lists of detected and suppressed errors, rerun with: -s
==13225== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   3.28 sec
----------------------------------------------------------
Test Passed.
"Stack.RandomInt" end time: Feb 25 05:16 UTC
"Stack.RandomInt" time elapsed: 00:00:03
----------------------------------------------------------

5/60 Testing: Stack.TopEmpty
5/60 Test: Stack.TopEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.TopEmpty"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.TopEmpty" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13226== Memcheck, a memory error detector
==13226== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13226== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13226== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.TopEmpty
==13226== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.TopEmpty
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (15 ms total)
[  PASSED  ] 0 tests.
==13226== 
==13226== HEAP SUMMARY:
==13226==     in use at exit: 0 bytes in 0 blocks
==13226==   total heap usage: 181 allocs, 181 frees, 113,487 bytes allocated
==13226== 
==13226== All heap blocks were freed -- no leaks are possible
==13226== 
==13226== For lists of detected and suppressed errors, rerun with: -s
==13226== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.01 sec
----------------------------------------------------------
Test Passed.
"Stack.TopEmpty" end time: Feb 25 05:16 UTC
"Stack.TopEmpty" time elapsed: 00:00:01
----------------------------------------------------------

6/60 Testing: Stack.OneElementPush
6/60 Test: Stack.OneElementPush
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.OneElementPush"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.OneElementPush" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13227== Memcheck, a memory error detector
==13227== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13227== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13227== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.OneElementPush
==13227== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.OneElementPush
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (14 ms total)
[  PASSED  ] 0 tests.
==13227== 
==13227== HEAP SUMMARY:
==13227==     in use at exit: 0 bytes in 0 blocks
==13227==   total heap usage: 184 allocs, 184 frees, 113,620 bytes allocated
==13227== 
==13227== All heap blocks were freed -- no leaks are possible
==13227== 
==13227== For lists of detected and suppressed errors, rerun with: -s
==13227== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.02 sec
----------------------------------------------------------
Test Passed.
"Stack.OneElementPush" end time: Feb 25 05:16 UTC
"Stack.OneElementPush" time elapsed: 00:00:01
----------------------------------------------------------

7/60 Testing: Stack.FiveElementPush
7/60 Test: Stack.FiveElementPush
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.FiveElementPush"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.FiveElementPush" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13228== Memcheck, a memory error detector
==13228== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13228== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13228== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.FiveElementPush
==13228== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.FiveElementPush
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (14 ms total)
[  PASSED  ] 0 tests.
==13228== 
==13228== HEAP SUMMARY:
==13228==     in use at exit: 0 bytes in 0 blocks
==13228==   total heap usage: 184 allocs, 184 frees, 113,627 bytes allocated
==13228== 
==13228== All heap blocks were freed -- no leaks are possible
==13228== 
==13228== For lists of detected and suppressed errors, rerun with: -s
==13228== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.00 sec
----------------------------------------------------------
Test Passed.
"Stack.FiveElementPush" end time: Feb 25 05:16 UTC
"Stack.FiveElementPush" time elapsed: 00:00:00
----------------------------------------------------------

8/60 Testing: Stack.OneElementPop
8/60 Test: Stack.OneElementPop
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.OneElementPop"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.OneElementPop" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13229== Memcheck, a memory error detector
==13229== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13229== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13229== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.OneElementPop
==13229== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.OneElementPop
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (16 ms total)
[  PASSED  ] 0 tests.
==13229== 
==13229== HEAP SUMMARY:
==13229==     in use at exit: 0 bytes in 0 blocks
==13229==   total heap usage: 184 allocs, 184 frees, 113,613 bytes allocated
==13229== 
==13229== All heap blocks were freed -- no leaks are possible
==13229== 
==13229== For lists of detected and suppressed errors, rerun with: -s
==13229== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"Stack.OneElementPop" end time: Feb 25 05:16 UTC
"Stack.OneElementPop" time elapsed: 00:00:01
----------------------------------------------------------

9/60 Testing: Stack.FiveElementPop
9/60 Test: Stack.FiveElementPop
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.FiveElementPop"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.FiveElementPop" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13230== Memcheck, a memory error detector
==13230== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13230== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13230== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.FiveElementPop
==13230== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.FiveElementPop
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (15 ms total)
[  PASSED  ] 0 tests.
==13230== 
==13230== HEAP SUMMARY:
==13230==     in use at exit: 0 bytes in 0 blocks
==13230==   total heap usage: 184 allocs, 184 frees, 113,620 bytes allocated
==13230== 
==13230== All heap blocks were freed -- no leaks are possible
==13230== 
==13230== For lists of detected and suppressed errors, rerun with: -s
==13230== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.01 sec
----------------------------------------------------------
Test Passed.
"Stack.FiveElementPop" end time: Feb 25 05:16 UTC
"Stack.FiveElementPop" time elapsed: 00:00:01
----------------------------------------------------------

10/60 Testing: Stack.PopEmpty
10/60 Test: Stack.PopEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.PopEmpty"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.PopEmpty" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13231== Memcheck, a memory error detector
==13231== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13231== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13231== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.PopEmpty
==13231== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.PopEmpty
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (15 ms total)
[  PASSED  ] 0 tests.
==13231== 
==13231== HEAP SUMMARY:
==13231==     in use at exit: 0 bytes in 0 blocks
==13231==   total heap usage: 181 allocs, 181 frees, 113,487 bytes allocated
==13231== 
==13231== All heap blocks were freed -- no leaks are possible
==13231== 
==13231== For lists of detected and suppressed errors, rerun with: -s
==13231== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.00 sec
----------------------------------------------------------
Test Passed.
"Stack.PopEmpty" end time: Feb 25 05:16 UTC
"Stack.PopEmpty" time elapsed: 00:00:01
----------------------------------------------------------

11/60 Testing: Stack.EmptyThenRefill
11/60 Test: Stack.EmptyThenRefill
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.EmptyThenRefill"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.EmptyThenRefill" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13232== Memcheck, a memory error detector
==13232== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13232== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13232== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.EmptyThenRefill
==13232== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.EmptyThenRefill
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (15 ms total)
[  PASSED  ] 0 tests.
==13232== 
==13232== HEAP SUMMARY:
==13232==     in use at exit: 0 bytes in 0 blocks
==13232==   total heap usage: 184 allocs, 184 frees, 113,627 bytes allocated
==13232== 
==13232== All heap blocks were freed -- no leaks are possible
==13232== 
==13232== For lists of detected and suppressed errors, rerun with: -s
==13232== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"Stack.EmptyThenRefill" end time: Feb 25 05:16 UTC
"Stack.EmptyThenRefill" time elapsed: 00:00:01
----------------------------------------------------------

12/60 Testing: Stack.PopThenAdd
12/60 Test: Stack.PopThenAdd
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.PopThenAdd"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"Stack.PopThenAdd" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13233== Memcheck, a memory error detector
==13233== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13233== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13233== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.PopThenAdd
==13233== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.PopThenAdd
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (15 ms total)
[  PASSED  ] 0 tests.
==13233== 
==13233== HEAP SUMMARY:
==13233==     in use at exit: 0 bytes in 0 blocks
==13233==   total heap usage: 184 allocs, 184 frees, 113,592 bytes allocated
==13233== 
==13233== All heap blocks were freed -- no leaks are possible
==13233== 
==13233== For lists of detected and suppressed errors, rerun with: -s
==13233== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"Stack.PopThenAdd" end time: Feb 25 05:16 UTC
"Stack.PopThenAdd" time elapsed: 00:00:01
----------------------------------------------------------

13/60 Testing: StackStress.50x50Elements
13/60 Test: StackStress.50x50Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=StackStress.50x50Elements"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"StackStress.50x50Elements" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13234== Memcheck, a memory error detector
==13234== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13234== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13234== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=StackStress.50x50Elements
==13234== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = StackStress.50x50Elements
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (16 ms total)
[  PASSED  ] 0 tests.
==13234== 
==13234== HEAP SUMMARY:
==13234==     in use at exit: 0 bytes in 0 blocks
==13234==   total heap usage: 184 allocs, 184 frees, 113,655 bytes allocated
==13234== 
==13234== All heap blocks were freed -- no leaks are possible
==13234== 
==13234== For lists of detected and suppressed errors, rerun with: -s
==13234== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Passed.
"StackStress.50x50Elements" end time: Feb 25 05:16 UTC
"StackStress.50x50Elements" time elapsed: 00:00:01
----------------------------------------------------------

14/60 Testing: StackStress.5x1000Elements
14/60 Test: StackStress.5x1000Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=StackStress.5x1000Elements"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"StackStress.5x1000Elements" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13235== Memcheck, a memory error detector
==13235== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13235== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13235== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=StackStress.5x1000Elements
==13235== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = StackStress.5x1000Elements
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (16 ms total)
[  PASSED  ] 0 tests.
==13235== 
==13235== HEAP SUMMARY:
==13235==     in use at exit: 0 bytes in 0 blocks
==13235==   total heap usage: 184 allocs, 184 frees, 113,662 bytes allocated
==13235== 
==13235== All heap blocks were freed -- no leaks are possible
==13235== 
==13235== For lists of detected and suppressed errors, rerun with: -s
==13235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"StackStress.5x1000Elements" end time: Feb 25 05:16 UTC
"StackStress.5x1000Elements" time elapsed: 00:00:01
----------------------------------------------------------

15/60 Testing: StackStress.2x10000Elements
15/60 Test: StackStress.2x10000Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=StackStress.2x10000Elements"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests
"StackStress.2x10000Elements" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13236== Memcheck, a memory error detector
==13236== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13236== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13236== Command: /work/hw-melgart/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=StackStress.2x10000Elements
==13236== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = StackStress.2x10000Elements
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (14 ms total)
[  PASSED  ] 0 tests.
==13236== 
==13236== HEAP SUMMARY:
==13236==     in use at exit: 0 bytes in 0 blocks
==13236==   total heap usage: 184 allocs, 184 frees, 113,669 bytes allocated
==13236== 
==13236== All heap blocks were freed -- no leaks are possible
==13236== 
==13236== For lists of detected and suppressed errors, rerun with: -s
==13236== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.99 sec
----------------------------------------------------------
Test Passed.
"StackStress.2x10000Elements" end time: Feb 25 05:16 UTC
"StackStress.2x10000Elements" time elapsed: 00:00:00
----------------------------------------------------------

16/60 Testing: HeapTest.ConstructionDestruction
16/60 Test: HeapTest.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ConstructionDestruction"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.ConstructionDestruction" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13237== Memcheck, a memory error detector
==13237== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13237== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13237== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ConstructionDestruction
==13237== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ConstructionDestruction
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ConstructionDestruction
[       OK ] HeapTest.ConstructionDestruction (10 ms)
[----------] 1 test from HeapTest (16 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (42 ms total)
[  PASSED  ] 1 test.
==13237== 
==13237== HEAP SUMMARY:
==13237==     in use at exit: 0 bytes in 0 blocks
==13237==   total heap usage: 457 allocs, 457 frees, 131,852 bytes allocated
==13237== 
==13237== All heap blocks were freed -- no leaks are possible
==13237== 
==13237== For lists of detected and suppressed errors, rerun with: -s
==13237== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.65 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ConstructionDestruction" end time: Feb 25 05:16 UTC
"HeapTest.ConstructionDestruction" time elapsed: 00:00:01
----------------------------------------------------------

17/60 Testing: HeapTest.InitiallyEmpty
17/60 Test: HeapTest.InitiallyEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.InitiallyEmpty"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.InitiallyEmpty" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13238== Memcheck, a memory error detector
==13238== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13238== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13238== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.InitiallyEmpty
==13238== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.InitiallyEmpty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.InitiallyEmpty
[       OK ] HeapTest.InitiallyEmpty (15 ms)
[----------] 1 test from HeapTest (24 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (49 ms total)
[  PASSED  ] 1 test.
==13238== 
==13238== HEAP SUMMARY:
==13238==     in use at exit: 0 bytes in 0 blocks
==13238==   total heap usage: 457 allocs, 457 frees, 131,735 bytes allocated
==13238== 
==13238== All heap blocks were freed -- no leaks are possible
==13238== 
==13238== For lists of detected and suppressed errors, rerun with: -s
==13238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"HeapTest.InitiallyEmpty" end time: Feb 25 05:16 UTC
"HeapTest.InitiallyEmpty" time elapsed: 00:00:01
----------------------------------------------------------

18/60 Testing: HeapTest.EmptyTopException
18/60 Test: HeapTest.EmptyTopException
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.EmptyTopException"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.EmptyTopException" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13239== Memcheck, a memory error detector
==13239== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13239== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13239== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.EmptyTopException
==13239== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.EmptyTopException
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.EmptyTopException
[       OK ] HeapTest.EmptyTopException (52 ms)
[----------] 1 test from HeapTest (61 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (88 ms total)
[  PASSED  ] 1 test.
==13239== 
==13239== HEAP SUMMARY:
==13239==     in use at exit: 0 bytes in 0 blocks
==13239==   total heap usage: 459 allocs, 459 frees, 131,942 bytes allocated
==13239== 
==13239== All heap blocks were freed -- no leaks are possible
==13239== 
==13239== For lists of detected and suppressed errors, rerun with: -s
==13239== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.14 sec
----------------------------------------------------------
Test Passed.
"HeapTest.EmptyTopException" end time: Feb 25 05:16 UTC
"HeapTest.EmptyTopException" time elapsed: 00:00:01
----------------------------------------------------------

19/60 Testing: HeapTest.EmptyPopException
19/60 Test: HeapTest.EmptyPopException
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.EmptyPopException"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.EmptyPopException" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13240== Memcheck, a memory error detector
==13240== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13240== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13240== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.EmptyPopException
==13240== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.EmptyPopException
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.EmptyPopException
[       OK ] HeapTest.EmptyPopException (42 ms)
[----------] 1 test from HeapTest (49 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (73 ms total)
[  PASSED  ] 1 test.
==13240== 
==13240== HEAP SUMMARY:
==13240==     in use at exit: 0 bytes in 0 blocks
==13240==   total heap usage: 459 allocs, 459 frees, 131,942 bytes allocated
==13240== 
==13240== All heap blocks were freed -- no leaks are possible
==13240== 
==13240== For lists of detected and suppressed errors, rerun with: -s
==13240== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.11 sec
----------------------------------------------------------
Test Passed.
"HeapTest.EmptyPopException" end time: Feb 25 05:16 UTC
"HeapTest.EmptyPopException" time elapsed: 00:00:01
----------------------------------------------------------

20/60 Testing: HeapTest.SingleItemNonempty
20/60 Test: HeapTest.SingleItemNonempty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SingleItemNonempty"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.SingleItemNonempty" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13241== Memcheck, a memory error detector
==13241== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13241== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13241== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SingleItemNonempty
==13241== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SingleItemNonempty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SingleItemNonempty
[       OK ] HeapTest.SingleItemNonempty (20 ms)
[----------] 1 test from HeapTest (28 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (52 ms total)
[  PASSED  ] 1 test.
==13241== 
==13241== HEAP SUMMARY:
==13241==     in use at exit: 0 bytes in 0 blocks
==13241==   total heap usage: 458 allocs, 458 frees, 131,767 bytes allocated
==13241== 
==13241== All heap blocks were freed -- no leaks are possible
==13241== 
==13241== For lists of detected and suppressed errors, rerun with: -s
==13241== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.08 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SingleItemNonempty" end time: Feb 25 05:16 UTC
"HeapTest.SingleItemNonempty" time elapsed: 00:00:01
----------------------------------------------------------

21/60 Testing: HeapTest.SingleItemPush
21/60 Test: HeapTest.SingleItemPush
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SingleItemPush"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.SingleItemPush" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13242== Memcheck, a memory error detector
==13242== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13242== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13242== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SingleItemPush
==13242== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SingleItemPush
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SingleItemPush
[       OK ] HeapTest.SingleItemPush (22 ms)
[----------] 1 test from HeapTest (30 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (54 ms total)
[  PASSED  ] 1 test.
==13242== 
==13242== HEAP SUMMARY:
==13242==     in use at exit: 0 bytes in 0 blocks
==13242==   total heap usage: 458 allocs, 458 frees, 131,739 bytes allocated
==13242== 
==13242== All heap blocks were freed -- no leaks are possible
==13242== 
==13242== For lists of detected and suppressed errors, rerun with: -s
==13242== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.10 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SingleItemPush" end time: Feb 25 05:16 UTC
"HeapTest.SingleItemPush" time elapsed: 00:00:01
----------------------------------------------------------

22/60 Testing: HeapTest.SingleItemPushPop
22/60 Test: HeapTest.SingleItemPushPop
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SingleItemPushPop"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.SingleItemPushPop" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13243== Memcheck, a memory error detector
==13243== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13243== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13243== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SingleItemPushPop
==13243== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SingleItemPushPop
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SingleItemPushPop
[       OK ] HeapTest.SingleItemPushPop (22 ms)
[----------] 1 test from HeapTest (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (53 ms total)
[  PASSED  ] 1 test.
==13243== 
==13243== HEAP SUMMARY:
==13243==     in use at exit: 0 bytes in 0 blocks
==13243==   total heap usage: 458 allocs, 458 frees, 131,760 bytes allocated
==13243== 
==13243== All heap blocks were freed -- no leaks are possible
==13243== 
==13243== For lists of detected and suppressed errors, rerun with: -s
==13243== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.27 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SingleItemPushPop" end time: Feb 25 05:16 UTC
"HeapTest.SingleItemPushPop" time elapsed: 00:00:01
----------------------------------------------------------

23/60 Testing: HeapTest.TwoElementPush_LowPriFirst
23/60 Test: HeapTest.TwoElementPush_LowPriFirst
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.TwoElementPush_LowPriFirst"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.TwoElementPush_LowPriFirst" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13244== Memcheck, a memory error detector
==13244== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13244== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13244== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.TwoElementPush_LowPriFirst
==13244== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.TwoElementPush_LowPriFirst
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.TwoElementPush_LowPriFirst
[       OK ] HeapTest.TwoElementPush_LowPriFirst (25 ms)
[----------] 1 test from HeapTest (33 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (56 ms total)
[  PASSED  ] 1 test.
==13244== 
==13244== HEAP SUMMARY:
==13244==     in use at exit: 0 bytes in 0 blocks
==13244==   total heap usage: 459 allocs, 459 frees, 131,966 bytes allocated
==13244== 
==13244== All heap blocks were freed -- no leaks are possible
==13244== 
==13244== For lists of detected and suppressed errors, rerun with: -s
==13244== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.11 sec
----------------------------------------------------------
Test Passed.
"HeapTest.TwoElementPush_LowPriFirst" end time: Feb 25 05:16 UTC
"HeapTest.TwoElementPush_LowPriFirst" time elapsed: 00:00:01
----------------------------------------------------------

24/60 Testing: HeapTest.TwoElementPush_HighPriFirst
24/60 Test: HeapTest.TwoElementPush_HighPriFirst
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.TwoElementPush_HighPriFirst"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.TwoElementPush_HighPriFirst" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13245== Memcheck, a memory error detector
==13245== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13245== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13245== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.TwoElementPush_HighPriFirst
==13245== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.TwoElementPush_HighPriFirst
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.TwoElementPush_HighPriFirst
[       OK ] HeapTest.TwoElementPush_HighPriFirst (25 ms)
[----------] 1 test from HeapTest (30 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (54 ms total)
[  PASSED  ] 1 test.
==13245== 
==13245== HEAP SUMMARY:
==13245==     in use at exit: 0 bytes in 0 blocks
==13245==   total heap usage: 459 allocs, 459 frees, 132,000 bytes allocated
==13245== 
==13245== All heap blocks were freed -- no leaks are possible
==13245== 
==13245== For lists of detected and suppressed errors, rerun with: -s
==13245== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.11 sec
----------------------------------------------------------
Test Passed.
"HeapTest.TwoElementPush_HighPriFirst" end time: Feb 25 05:16 UTC
"HeapTest.TwoElementPush_HighPriFirst" time elapsed: 00:00:01
----------------------------------------------------------

25/60 Testing: HeapTest.Duplicates
25/60 Test: HeapTest.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.Duplicates"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.Duplicates" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13246== Memcheck, a memory error detector
==13246== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13246== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13246== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.Duplicates
==13246== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.Duplicates
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.Duplicates
[       OK ] HeapTest.Duplicates (28 ms)
[----------] 1 test from HeapTest (36 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (67 ms total)
[  PASSED  ] 1 test.
==13246== 
==13246== HEAP SUMMARY:
==13246==     in use at exit: 0 bytes in 0 blocks
==13246==   total heap usage: 460 allocs, 460 frees, 131,735 bytes allocated
==13246== 
==13246== All heap blocks were freed -- no leaks are possible
==13246== 
==13246== For lists of detected and suppressed errors, rerun with: -s
==13246== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"HeapTest.Duplicates" end time: Feb 25 05:16 UTC
"HeapTest.Duplicates" time elapsed: 00:00:01
----------------------------------------------------------

26/60 Testing: HeapTest.NegativeElements
26/60 Test: HeapTest.NegativeElements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.NegativeElements"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.NegativeElements" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13247== Memcheck, a memory error detector
==13247== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13247== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13247== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.NegativeElements
==13247== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.NegativeElements
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.NegativeElements
[       OK ] HeapTest.NegativeElements (22 ms)
[----------] 1 test from HeapTest (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (61 ms total)
[  PASSED  ] 1 test.
==13247== 
==13247== HEAP SUMMARY:
==13247==     in use at exit: 0 bytes in 0 blocks
==13247==   total heap usage: 459 allocs, 459 frees, 131,761 bytes allocated
==13247== 
==13247== All heap blocks were freed -- no leaks are possible
==13247== 
==13247== For lists of detected and suppressed errors, rerun with: -s
==13247== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.17 sec
----------------------------------------------------------
Test Passed.
"HeapTest.NegativeElements" end time: Feb 25 05:16 UTC
"HeapTest.NegativeElements" time elapsed: 00:00:01
----------------------------------------------------------

27/60 Testing: HeapTest.ThreeElementPush_0_5_10
27/60 Test: HeapTest.ThreeElementPush_0_5_10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_0_5_10"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_0_5_10" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13248== Memcheck, a memory error detector
==13248== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13248== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13248== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_0_5_10
==13248== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_0_5_10
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_0_5_10
[       OK ] HeapTest.ThreeElementPush_0_5_10 (27 ms)
[----------] 1 test from HeapTest (34 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (57 ms total)
[  PASSED  ] 1 test.
==13248== 
==13248== HEAP SUMMARY:
==13248==     in use at exit: 0 bytes in 0 blocks
==13248==   total heap usage: 460 allocs, 460 frees, 131,880 bytes allocated
==13248== 
==13248== All heap blocks were freed -- no leaks are possible
==13248== 
==13248== For lists of detected and suppressed errors, rerun with: -s
==13248== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.09 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_0_5_10" end time: Feb 25 05:16 UTC
"HeapTest.ThreeElementPush_0_5_10" time elapsed: 00:00:01
----------------------------------------------------------

28/60 Testing: HeapTest.ThreeElementPush_0_10_5
28/60 Test: HeapTest.ThreeElementPush_0_10_5
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_0_10_5"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_0_10_5" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13249== Memcheck, a memory error detector
==13249== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13249== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13249== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_0_10_5
==13249== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_0_10_5
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_0_10_5
[       OK ] HeapTest.ThreeElementPush_0_10_5 (27 ms)
[----------] 1 test from HeapTest (34 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (58 ms total)
[  PASSED  ] 1 test.
==13249== 
==13249== HEAP SUMMARY:
==13249==     in use at exit: 0 bytes in 0 blocks
==13249==   total heap usage: 460 allocs, 460 frees, 131,880 bytes allocated
==13249== 
==13249== All heap blocks were freed -- no leaks are possible
==13249== 
==13249== For lists of detected and suppressed errors, rerun with: -s
==13249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_0_10_5" end time: Feb 25 05:16 UTC
"HeapTest.ThreeElementPush_0_10_5" time elapsed: 00:00:01
----------------------------------------------------------

29/60 Testing: HeapTest.ThreeElementPush_5_0_10
29/60 Test: HeapTest.ThreeElementPush_5_0_10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_5_0_10"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_5_0_10" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13250== Memcheck, a memory error detector
==13250== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13250== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13250== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_5_0_10
==13250== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_5_0_10
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_5_0_10
[       OK ] HeapTest.ThreeElementPush_5_0_10 (27 ms)
[----------] 1 test from HeapTest (35 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (59 ms total)
[  PASSED  ] 1 test.
==13250== 
==13250== HEAP SUMMARY:
==13250==     in use at exit: 0 bytes in 0 blocks
==13250==   total heap usage: 460 allocs, 460 frees, 131,880 bytes allocated
==13250== 
==13250== All heap blocks were freed -- no leaks are possible
==13250== 
==13250== For lists of detected and suppressed errors, rerun with: -s
==13250== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_5_0_10" end time: Feb 25 05:16 UTC
"HeapTest.ThreeElementPush_5_0_10" time elapsed: 00:00:01
----------------------------------------------------------

30/60 Testing: HeapTest.ThreeElementPush_5_10_0
30/60 Test: HeapTest.ThreeElementPush_5_10_0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_5_10_0"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_5_10_0" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13251== Memcheck, a memory error detector
==13251== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13251== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13251== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_5_10_0
==13251== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_5_10_0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_5_10_0
[       OK ] HeapTest.ThreeElementPush_5_10_0 (30 ms)
[----------] 1 test from HeapTest (36 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (66 ms total)
[  PASSED  ] 1 test.
==13251== 
==13251== HEAP SUMMARY:
==13251==     in use at exit: 0 bytes in 0 blocks
==13251==   total heap usage: 460 allocs, 460 frees, 131,880 bytes allocated
==13251== 
==13251== All heap blocks were freed -- no leaks are possible
==13251== 
==13251== For lists of detected and suppressed errors, rerun with: -s
==13251== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.13 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_5_10_0" end time: Feb 25 05:16 UTC
"HeapTest.ThreeElementPush_5_10_0" time elapsed: 00:00:01
----------------------------------------------------------

31/60 Testing: HeapTest.ThreeElementPush_10_0_5
31/60 Test: HeapTest.ThreeElementPush_10_0_5
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_10_0_5"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_10_0_5" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13252== Memcheck, a memory error detector
==13252== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13252== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13252== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_10_0_5
==13252== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_10_0_5
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_10_0_5
[       OK ] HeapTest.ThreeElementPush_10_0_5 (29 ms)
[----------] 1 test from HeapTest (37 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (62 ms total)
[  PASSED  ] 1 test.
==13252== 
==13252== HEAP SUMMARY:
==13252==     in use at exit: 0 bytes in 0 blocks
==13252==   total heap usage: 460 allocs, 460 frees, 131,880 bytes allocated
==13252== 
==13252== All heap blocks were freed -- no leaks are possible
==13252== 
==13252== For lists of detected and suppressed errors, rerun with: -s
==13252== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_10_0_5" end time: Feb 25 05:16 UTC
"HeapTest.ThreeElementPush_10_0_5" time elapsed: 00:00:01
----------------------------------------------------------

32/60 Testing: HeapTest.ThreeElementPush_10_5_0
32/60 Test: HeapTest.ThreeElementPush_10_5_0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_10_5_0"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_10_5_0" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13253== Memcheck, a memory error detector
==13253== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13253== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13253== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_10_5_0
==13253== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_10_5_0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_10_5_0
[       OK ] HeapTest.ThreeElementPush_10_5_0 (28 ms)
[----------] 1 test from HeapTest (36 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (67 ms total)
[  PASSED  ] 1 test.
==13253== 
==13253== HEAP SUMMARY:
==13253==     in use at exit: 0 bytes in 0 blocks
==13253==   total heap usage: 460 allocs, 460 frees, 131,880 bytes allocated
==13253== 
==13253== All heap blocks were freed -- no leaks are possible
==13253== 
==13253== For lists of detected and suppressed errors, rerun with: -s
==13253== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_10_5_0" end time: Feb 25 05:16 UTC
"HeapTest.ThreeElementPush_10_5_0" time elapsed: 00:00:01
----------------------------------------------------------

33/60 Testing: HeapTest.GreaterComparator
33/60 Test: HeapTest.GreaterComparator
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.GreaterComparator"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.GreaterComparator" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13254== Memcheck, a memory error detector
==13254== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13254== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13254== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.GreaterComparator
==13254== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.GreaterComparator
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.GreaterComparator
[       OK ] HeapTest.GreaterComparator (27 ms)
[----------] 1 test from HeapTest (34 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (58 ms total)
[  PASSED  ] 1 test.
==13254== 
==13254== HEAP SUMMARY:
==13254==     in use at exit: 0 bytes in 0 blocks
==13254==   total heap usage: 460 allocs, 460 frees, 131,784 bytes allocated
==13254== 
==13254== All heap blocks were freed -- no leaks are possible
==13254== 
==13254== For lists of detected and suppressed errors, rerun with: -s
==13254== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.14 sec
----------------------------------------------------------
Test Passed.
"HeapTest.GreaterComparator" end time: Feb 25 05:16 UTC
"HeapTest.GreaterComparator" time elapsed: 00:00:01
----------------------------------------------------------

34/60 Testing: HeapTest.StringStorage
34/60 Test: HeapTest.StringStorage
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.StringStorage"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.StringStorage" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13255== Memcheck, a memory error detector
==13255== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13255== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13255== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.StringStorage
==13255== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.StringStorage
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.StringStorage
[       OK ] HeapTest.StringStorage (25 ms)
[----------] 1 test from HeapTest (36 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (61 ms total)
[  PASSED  ] 1 test.
==13255== 
==13255== HEAP SUMMARY:
==13255==     in use at exit: 0 bytes in 0 blocks
==13255==   total heap usage: 460 allocs, 460 frees, 131,952 bytes allocated
==13255== 
==13255== All heap blocks were freed -- no leaks are possible
==13255== 
==13255== For lists of detected and suppressed errors, rerun with: -s
==13255== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.13 sec
----------------------------------------------------------
Test Passed.
"HeapTest.StringStorage" end time: Feb 25 05:16 UTC
"HeapTest.StringStorage" time elapsed: 00:00:01
----------------------------------------------------------

35/60 Testing: HeapTest.FiveElementPush_TrinaryHeap
35/60 Test: HeapTest.FiveElementPush_TrinaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.FiveElementPush_TrinaryHeap"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.FiveElementPush_TrinaryHeap" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13256== Memcheck, a memory error detector
==13256== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13256== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13256== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.FiveElementPush_TrinaryHeap
==13256== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.FiveElementPush_TrinaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.FiveElementPush_TrinaryHeap
[       OK ] HeapTest.FiveElementPush_TrinaryHeap (40 ms)
[----------] 1 test from HeapTest (47 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (73 ms total)
[  PASSED  ] 1 test.
==13256== 
==13256== HEAP SUMMARY:
==13256==     in use at exit: 0 bytes in 0 blocks
==13256==   total heap usage: 461 allocs, 461 frees, 132,048 bytes allocated
==13256== 
==13256== All heap blocks were freed -- no leaks are possible
==13256== 
==13256== For lists of detected and suppressed errors, rerun with: -s
==13256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"HeapTest.FiveElementPush_TrinaryHeap" end time: Feb 25 05:16 UTC
"HeapTest.FiveElementPush_TrinaryHeap" time elapsed: 00:00:01
----------------------------------------------------------

36/60 Testing: HeapTest.SixElementPush_QuaternaryHeap
36/60 Test: HeapTest.SixElementPush_QuaternaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SixElementPush_QuaternaryHeap"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapTest.SixElementPush_QuaternaryHeap" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13257== Memcheck, a memory error detector
==13257== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13257== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13257== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SixElementPush_QuaternaryHeap
==13257== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SixElementPush_QuaternaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SixElementPush_QuaternaryHeap
[       OK ] HeapTest.SixElementPush_QuaternaryHeap (31 ms)
[----------] 1 test from HeapTest (38 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (62 ms total)
[  PASSED  ] 1 test.
==13257== 
==13257== HEAP SUMMARY:
==13257==     in use at exit: 0 bytes in 0 blocks
==13257==   total heap usage: 461 allocs, 461 frees, 132,116 bytes allocated
==13257== 
==13257== All heap blocks were freed -- no leaks are possible
==13257== 
==13257== For lists of detected and suppressed errors, rerun with: -s
==13257== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SixElementPush_QuaternaryHeap" end time: Feb 25 05:16 UTC
"HeapTest.SixElementPush_QuaternaryHeap" time elapsed: 00:00:01
----------------------------------------------------------

37/60 Testing: HeapStress.50x50RandomElements_BinaryHeap
37/60 Test: HeapStress.50x50RandomElements_BinaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.50x50RandomElements_BinaryHeap"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapStress.50x50RandomElements_BinaryHeap" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13258== Memcheck, a memory error detector
==13258== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13258== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13258== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.50x50RandomElements_BinaryHeap
==13258== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.50x50RandomElements_BinaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.50x50RandomElements_BinaryHeap
[       OK ] HeapStress.50x50RandomElements_BinaryHeap (331 ms)
[----------] 1 test from HeapStress (358 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (423 ms total)
[  PASSED  ] 1 test.
==13258== 
==13258== HEAP SUMMARY:
==13258==     in use at exit: 0 bytes in 0 blocks
==13258==   total heap usage: 958 allocs, 958 frees, 179,750 bytes allocated
==13258== 
==13258== All heap blocks were freed -- no leaks are possible
==13258== 
==13258== For lists of detected and suppressed errors, rerun with: -s
==13258== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.53 sec
----------------------------------------------------------
Test Passed.
"HeapStress.50x50RandomElements_BinaryHeap" end time: Feb 25 05:16 UTC
"HeapStress.50x50RandomElements_BinaryHeap" time elapsed: 00:00:01
----------------------------------------------------------

38/60 Testing: HeapStress.50x50RandomElements_QuaternaryHeap
38/60 Test: HeapStress.50x50RandomElements_QuaternaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.50x50RandomElements_QuaternaryHeap"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapStress.50x50RandomElements_QuaternaryHeap" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13259== Memcheck, a memory error detector
==13259== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13259== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13259== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.50x50RandomElements_QuaternaryHeap
==13259== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.50x50RandomElements_QuaternaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.50x50RandomElements_QuaternaryHeap
[       OK ] HeapStress.50x50RandomElements_QuaternaryHeap (259 ms)
[----------] 1 test from HeapStress (266 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (291 ms total)
[  PASSED  ] 1 test.
==13259== 
==13259== HEAP SUMMARY:
==13259==     in use at exit: 0 bytes in 0 blocks
==13259==   total heap usage: 958 allocs, 958 frees, 179,886 bytes allocated
==13259== 
==13259== All heap blocks were freed -- no leaks are possible
==13259== 
==13259== For lists of detected and suppressed errors, rerun with: -s
==13259== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.34 sec
----------------------------------------------------------
Test Passed.
"HeapStress.50x50RandomElements_QuaternaryHeap" end time: Feb 25 05:16 UTC
"HeapStress.50x50RandomElements_QuaternaryHeap" time elapsed: 00:00:01
----------------------------------------------------------

39/60 Testing: HeapStress.50x50RandomElements_DodecenaryHeap
39/60 Test: HeapStress.50x50RandomElements_DodecenaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.50x50RandomElements_DodecenaryHeap"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapStress.50x50RandomElements_DodecenaryHeap" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13260== Memcheck, a memory error detector
==13260== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13260== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13260== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.50x50RandomElements_DodecenaryHeap
==13260== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.50x50RandomElements_DodecenaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.50x50RandomElements_DodecenaryHeap
[       OK ] HeapStress.50x50RandomElements_DodecenaryHeap (264 ms)
[----------] 1 test from HeapStress (271 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (295 ms total)
[  PASSED  ] 1 test.
==13260== 
==13260== HEAP SUMMARY:
==13260==     in use at exit: 0 bytes in 0 blocks
==13260==   total heap usage: 958 allocs, 958 frees, 179,886 bytes allocated
==13260== 
==13260== All heap blocks were freed -- no leaks are possible
==13260== 
==13260== For lists of detected and suppressed errors, rerun with: -s
==13260== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.37 sec
----------------------------------------------------------
Test Passed.
"HeapStress.50x50RandomElements_DodecenaryHeap" end time: Feb 25 05:16 UTC
"HeapStress.50x50RandomElements_DodecenaryHeap" time elapsed: 00:00:01
----------------------------------------------------------

40/60 Testing: HeapStress.2x2000RandomElements_Binary
40/60 Test: HeapStress.2x2000RandomElements_Binary
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.2x2000RandomElements_Binary"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests
"HeapStress.2x2000RandomElements_Binary" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13261== Memcheck, a memory error detector
==13261== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13261== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13261== Command: /work/hw-melgart/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.2x2000RandomElements_Binary
==13261== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.2x2000RandomElements_Binary
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.2x2000RandomElements_Binary
[       OK ] HeapStress.2x2000RandomElements_Binary (338 ms)
[----------] 1 test from HeapStress (345 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (368 ms total)
[  PASSED  ] 1 test.
==13261== 
==13261== HEAP SUMMARY:
==13261==     in use at exit: 0 bytes in 0 blocks
==13261==   total heap usage: 488 allocs, 488 frees, 196,896 bytes allocated
==13261== 
==13261== All heap blocks were freed -- no leaks are possible
==13261== 
==13261== For lists of detected and suppressed errors, rerun with: -s
==13261== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.40 sec
----------------------------------------------------------
Test Passed.
"HeapStress.2x2000RandomElements_Binary" end time: Feb 25 05:16 UTC
"HeapStress.2x2000RandomElements_Binary" time elapsed: 00:00:01
----------------------------------------------------------

41/60 Testing: Heuristic.DirectHeuristic0
41/60 Test: Heuristic.DirectHeuristic0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.DirectHeuristic0"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.DirectHeuristic0" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13262== Memcheck, a memory error detector
==13262== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13262== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13262== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.DirectHeuristic0
==13262== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.DirectHeuristic0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.DirectHeuristic0
[       OK ] Heuristic.DirectHeuristic0 (75 ms)
[----------] 1 test from Heuristic (83 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (105 ms total)
[  PASSED  ] 1 test.
==13262== 
==13262== HEAP SUMMARY:
==13262==     in use at exit: 0 bytes in 0 blocks
==13262==   total heap usage: 450 allocs, 450 frees, 131,051 bytes allocated
==13262== 
==13262== All heap blocks were freed -- no leaks are possible
==13262== 
==13262== For lists of detected and suppressed errors, rerun with: -s
==13262== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.59 sec
----------------------------------------------------------
Test Passed.
"Heuristic.DirectHeuristic0" end time: Feb 25 05:16 UTC
"Heuristic.DirectHeuristic0" time elapsed: 00:00:01
----------------------------------------------------------

42/60 Testing: Heuristic.DirectHeuristic1
42/60 Test: Heuristic.DirectHeuristic1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.DirectHeuristic1"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.DirectHeuristic1" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13263== Memcheck, a memory error detector
==13263== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13263== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13263== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.DirectHeuristic1
==13263== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.DirectHeuristic1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.DirectHeuristic1
[       OK ] Heuristic.DirectHeuristic1 (76 ms)
[----------] 1 test from Heuristic (82 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (110 ms total)
[  PASSED  ] 1 test.
==13263== 
==13263== HEAP SUMMARY:
==13263==     in use at exit: 0 bytes in 0 blocks
==13263==   total heap usage: 447 allocs, 447 frees, 130,883 bytes allocated
==13263== 
==13263== All heap blocks were freed -- no leaks are possible
==13263== 
==13263== For lists of detected and suppressed errors, rerun with: -s
==13263== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"Heuristic.DirectHeuristic1" end time: Feb 25 05:16 UTC
"Heuristic.DirectHeuristic1" time elapsed: 00:00:01
----------------------------------------------------------

43/60 Testing: Heuristic.DirectHeuristic234
43/60 Test: Heuristic.DirectHeuristic234
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.DirectHeuristic234"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.DirectHeuristic234" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13264== Memcheck, a memory error detector
==13264== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13264== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13264== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.DirectHeuristic234
==13264== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.DirectHeuristic234
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.DirectHeuristic234
[       OK ] Heuristic.DirectHeuristic234 (70 ms)
[----------] 1 test from Heuristic (77 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (100 ms total)
[  PASSED  ] 1 test.
==13264== 
==13264== HEAP SUMMARY:
==13264==     in use at exit: 0 bytes in 0 blocks
==13264==   total heap usage: 466 allocs, 466 frees, 131,979 bytes allocated
==13264== 
==13264== All heap blocks were freed -- no leaks are possible
==13264== 
==13264== For lists of detected and suppressed errors, rerun with: -s
==13264== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.17 sec
----------------------------------------------------------
Test Passed.
"Heuristic.DirectHeuristic234" end time: Feb 25 05:16 UTC
"Heuristic.DirectHeuristic234" time elapsed: 00:00:01
----------------------------------------------------------

44/60 Testing: Heuristic.IndirectHeuristic0
44/60 Test: Heuristic.IndirectHeuristic0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristic0"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristic0" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13265== Memcheck, a memory error detector
==13265== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13265== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13265== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristic0
==13265== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristic0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristic0
[       OK ] Heuristic.IndirectHeuristic0 (77 ms)
[----------] 1 test from Heuristic (83 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (107 ms total)
[  PASSED  ] 1 test.
==13265== 
==13265== HEAP SUMMARY:
==13265==     in use at exit: 0 bytes in 0 blocks
==13265==   total heap usage: 450 allocs, 450 frees, 131,065 bytes allocated
==13265== 
==13265== All heap blocks were freed -- no leaks are possible
==13265== 
==13265== For lists of detected and suppressed errors, rerun with: -s
==13265== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristic0" end time: Feb 25 05:16 UTC
"Heuristic.IndirectHeuristic0" time elapsed: 00:00:01
----------------------------------------------------------

45/60 Testing: Heuristic.IndirectHeuristic1
45/60 Test: Heuristic.IndirectHeuristic1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristic1"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristic1" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13266== Memcheck, a memory error detector
==13266== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13266== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13266== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristic1
==13266== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristic1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristic1
[       OK ] Heuristic.IndirectHeuristic1 (72 ms)
[----------] 1 test from Heuristic (79 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (102 ms total)
[  PASSED  ] 1 test.
==13266== 
==13266== HEAP SUMMARY:
==13266==     in use at exit: 0 bytes in 0 blocks
==13266==   total heap usage: 447 allocs, 447 frees, 130,897 bytes allocated
==13266== 
==13266== All heap blocks were freed -- no leaks are possible
==13266== 
==13266== For lists of detected and suppressed errors, rerun with: -s
==13266== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristic1" end time: Feb 25 05:16 UTC
"Heuristic.IndirectHeuristic1" time elapsed: 00:00:01
----------------------------------------------------------

46/60 Testing: Heuristic.IndirectHeuristic234
46/60 Test: Heuristic.IndirectHeuristic234
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristic234"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristic234" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13267== Memcheck, a memory error detector
==13267== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13267== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13267== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristic234
==13267== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristic234
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristic234
[       OK ] Heuristic.IndirectHeuristic234 (93 ms)
[----------] 1 test from Heuristic (102 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (129 ms total)
[  PASSED  ] 1 test.
==13267== 
==13267== HEAP SUMMARY:
==13267==     in use at exit: 0 bytes in 0 blocks
==13267==   total heap usage: 466 allocs, 466 frees, 131,993 bytes allocated
==13267== 
==13267== All heap blocks were freed -- no leaks are possible
==13267== 
==13267== For lists of detected and suppressed errors, rerun with: -s
==13267== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.23 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristic234" end time: Feb 25 05:16 UTC
"Heuristic.IndirectHeuristic234" time elapsed: 00:00:01
----------------------------------------------------------

47/60 Testing: Heuristic.IndirectHeuristicFalsePositives
47/60 Test: Heuristic.IndirectHeuristicFalsePositives
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristicFalsePositives"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristicFalsePositives" start time: Feb 25 05:16 UTC
Output:
----------------------------------------------------------
==13268== Memcheck, a memory error detector
==13268== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13268== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13268== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristicFalsePositives
==13268== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristicFalsePositives
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristicFalsePositives
==13268== Conditional jump or move depends on uninitialised value(s)
==13268==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13268==    by 0x11E924: Heuristic_IndirectHeuristicFalsePositives_Test::TestBody() (rh_tests.cpp:337)
==13268==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13268==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13268==    by 0x15E235: Run (gtest.cc:2508)
==13268==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13268==    by 0x15E394: Run (gtest.cc:2684)
==13268==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13268==    by 0x15E47C: Run (gtest.cc:2816)
==13268==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13268==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13268==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13268==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13268==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13268==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13268== 
[       OK ] Heuristic.IndirectHeuristicFalsePositives (83 ms)
[----------] 1 test from Heuristic (92 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (117 ms total)
[  PASSED  ] 1 test.
==13268== 
==13268== HEAP SUMMARY:
==13268==     in use at exit: 0 bytes in 0 blocks
==13268==   total heap usage: 449 allocs, 449 frees, 131,342 bytes allocated
==13268== 
==13268== All heap blocks were freed -- no leaks are possible
==13268== 
==13268== Use --track-origins=yes to see where uninitialised values come from
==13268== For lists of detected and suppressed errors, rerun with: -s
==13268== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.20 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristicFalsePositives" end time: Feb 25 05:17 UTC
"Heuristic.IndirectHeuristicFalsePositives" time elapsed: 00:00:01
----------------------------------------------------------

48/60 Testing: Heuristic.IndirectHeuristicTruePositives
48/60 Test: Heuristic.IndirectHeuristicTruePositives
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristicTruePositives"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristicTruePositives" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13269== Memcheck, a memory error detector
==13269== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13269== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13269== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristicTruePositives
==13269== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristicTruePositives
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristicTruePositives
==13269== Conditional jump or move depends on uninitialised value(s)
==13269==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13269==    by 0x11EC4C: Heuristic_IndirectHeuristicTruePositives_Test::TestBody() (rh_tests.cpp:355)
==13269==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13269==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15E235: Run (gtest.cc:2508)
==13269==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13269==    by 0x15E394: Run (gtest.cc:2684)
==13269==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13269==    by 0x15E47C: Run (gtest.cc:2816)
==13269==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13269==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13269==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13269==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13269==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13269== 
==13269== Conditional jump or move depends on uninitialised value(s)
==13269==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13269==    by 0x11EDCA: Heuristic_IndirectHeuristicTruePositives_Test::TestBody() (rh_tests.cpp:368)
==13269==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13269==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15E235: Run (gtest.cc:2508)
==13269==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13269==    by 0x15E394: Run (gtest.cc:2684)
==13269==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13269==    by 0x15E47C: Run (gtest.cc:2816)
==13269==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13269==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13269==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13269==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13269==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13269== 
==13269== Conditional jump or move depends on uninitialised value(s)
==13269==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13269==    by 0x11EF48: Heuristic_IndirectHeuristicTruePositives_Test::TestBody() (rh_tests.cpp:381)
==13269==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13269==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15E235: Run (gtest.cc:2508)
==13269==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13269==    by 0x15E394: Run (gtest.cc:2684)
==13269==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13269==    by 0x15E47C: Run (gtest.cc:2816)
==13269==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13269==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13269==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13269==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13269==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13269== 
==13269== Conditional jump or move depends on uninitialised value(s)
==13269==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13269==    by 0x11F0C6: Heuristic_IndirectHeuristicTruePositives_Test::TestBody() (rh_tests.cpp:394)
==13269==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13269==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15E235: Run (gtest.cc:2508)
==13269==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13269==    by 0x15E394: Run (gtest.cc:2684)
==13269==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13269==    by 0x15E47C: Run (gtest.cc:2816)
==13269==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13269==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13269==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13269==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13269==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13269== 
==13269== Conditional jump or move depends on uninitialised value(s)
==13269==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13269==    by 0x11F244: Heuristic_IndirectHeuristicTruePositives_Test::TestBody() (rh_tests.cpp:406)
==13269==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13269==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15E235: Run (gtest.cc:2508)
==13269==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13269==    by 0x15E394: Run (gtest.cc:2684)
==13269==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13269==    by 0x15E47C: Run (gtest.cc:2816)
==13269==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13269==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13269==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13269==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13269==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13269== 
==13269== Conditional jump or move depends on uninitialised value(s)
==13269==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13269==    by 0x11F3C2: Heuristic_IndirectHeuristicTruePositives_Test::TestBody() (rh_tests.cpp:421)
==13269==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13269==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15E235: Run (gtest.cc:2508)
==13269==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13269==    by 0x15E394: Run (gtest.cc:2684)
==13269==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13269==    by 0x15E47C: Run (gtest.cc:2816)
==13269==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13269==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13269==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13269==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13269==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13269==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13269== 
[       OK ] Heuristic.IndirectHeuristicTruePositives (89 ms)
[----------] 1 test from Heuristic (96 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (119 ms total)
[  PASSED  ] 1 test.
==13269== 
==13269== HEAP SUMMARY:
==13269==     in use at exit: 0 bytes in 0 blocks
==13269==   total heap usage: 525 allocs, 525 frees, 135,665 bytes allocated
==13269== 
==13269== All heap blocks were freed -- no leaks are possible
==13269== 
==13269== Use --track-origins=yes to see where uninitialised values come from
==13269== For lists of detected and suppressed errors, rerun with: -s
==13269== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.20 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristicTruePositives" end time: Feb 25 05:17 UTC
"Heuristic.IndirectHeuristicTruePositives" time elapsed: 00:00:01
----------------------------------------------------------

49/60 Testing: Heuristic.IndirectHeuristicAboveBelow
49/60 Test: Heuristic.IndirectHeuristicAboveBelow
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristicAboveBelow"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristicAboveBelow" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13270== Memcheck, a memory error detector
==13270== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13270== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13270== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristicAboveBelow
==13270== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristicAboveBelow
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristicAboveBelow
==13270== Conditional jump or move depends on uninitialised value(s)
==13270==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13270==    by 0x11F9A2: Heuristic_IndirectHeuristicAboveBelow_Test::TestBody() (rh_tests.cpp:438)
==13270==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13270==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13270==    by 0x15E235: Run (gtest.cc:2508)
==13270==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13270==    by 0x15E394: Run (gtest.cc:2684)
==13270==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13270==    by 0x15E47C: Run (gtest.cc:2816)
==13270==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13270==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13270==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13270==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13270==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13270==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13270== 
==13270== Conditional jump or move depends on uninitialised value(s)
==13270==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13270==    by 0x11FB20: Heuristic_IndirectHeuristicAboveBelow_Test::TestBody() (rh_tests.cpp:451)
==13270==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13270==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13270==    by 0x15E235: Run (gtest.cc:2508)
==13270==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13270==    by 0x15E394: Run (gtest.cc:2684)
==13270==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13270==    by 0x15E47C: Run (gtest.cc:2816)
==13270==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13270==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13270==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13270==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13270==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13270==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13270== 
==13270== Conditional jump or move depends on uninitialised value(s)
==13270==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13270==    by 0x11FC9E: Heuristic_IndirectHeuristicAboveBelow_Test::TestBody() (rh_tests.cpp:467)
==13270==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13270==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13270==    by 0x15E235: Run (gtest.cc:2508)
==13270==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13270==    by 0x15E394: Run (gtest.cc:2684)
==13270==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13270==    by 0x15E47C: Run (gtest.cc:2816)
==13270==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13270==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13270==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13270==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13270==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13270==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13270== 
[       OK ] Heuristic.IndirectHeuristicAboveBelow (83 ms)
[----------] 1 test from Heuristic (90 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (115 ms total)
[  PASSED  ] 1 test.
==13270== 
==13270== HEAP SUMMARY:
==13270==     in use at exit: 0 bytes in 0 blocks
==13270==   total heap usage: 471 allocs, 471 frees, 132,500 bytes allocated
==13270== 
==13270== All heap blocks were freed -- no leaks are possible
==13270== 
==13270== Use --track-origins=yes to see where uninitialised values come from
==13270== For lists of detected and suppressed errors, rerun with: -s
==13270== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.41 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristicAboveBelow" end time: Feb 25 05:17 UTC
"Heuristic.IndirectHeuristicAboveBelow" time elapsed: 00:00:01
----------------------------------------------------------

50/60 Testing: OperatorLT.Nominal1
50/60 Test: OperatorLT.Nominal1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=OperatorLT.Nominal1"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"OperatorLT.Nominal1" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13271== Memcheck, a memory error detector
==13271== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13271== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13271== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=OperatorLT.Nominal1
==13271== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = OperatorLT.Nominal1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from OperatorLT
[ RUN      ] OperatorLT.Nominal1
[       OK ] OperatorLT.Nominal1 (104 ms)
[----------] 1 test from OperatorLT (114 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (140 ms total)
[  PASSED  ] 1 test.
==13271== 
==13271== HEAP SUMMARY:
==13271==     in use at exit: 0 bytes in 0 blocks
==13271==   total heap usage: 504 allocs, 504 frees, 138,982 bytes allocated
==13271== 
==13271== All heap blocks were freed -- no leaks are possible
==13271== 
==13271== For lists of detected and suppressed errors, rerun with: -s
==13271== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.25 sec
----------------------------------------------------------
Test Passed.
"OperatorLT.Nominal1" end time: Feb 25 05:17 UTC
"OperatorLT.Nominal1" time elapsed: 00:00:01
----------------------------------------------------------

51/60 Testing: Move.ConstructorAndScore
51/60 Test: Move.ConstructorAndScore
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Move.ConstructorAndScore"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Move.ConstructorAndScore" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13272== Memcheck, a memory error detector
==13272== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13272== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13272== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Move.ConstructorAndScore
==13272== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Move.ConstructorAndScore
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Move
[ RUN      ] Move.ConstructorAndScore
[       OK ] Move.ConstructorAndScore (94 ms)
[----------] 1 test from Move (99 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (122 ms total)
[  PASSED  ] 1 test.
==13272== 
==13272== HEAP SUMMARY:
==13272==     in use at exit: 1,440 bytes in 32 blocks
==13272==   total heap usage: 449 allocs, 417 frees, 130,823 bytes allocated
==13272== 
==13272== 556 (96 direct, 460 indirect) bytes in 1 blocks are definitely lost in loss record 12 of 13
==13272==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13272==    by 0x120800: Move_ConstructorAndScore_Test::TestBody() (rh_tests.cpp:520)
==13272==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13272==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13272==    by 0x15E235: Run (gtest.cc:2508)
==13272==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13272==    by 0x15E394: Run (gtest.cc:2684)
==13272==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13272==    by 0x15E47C: Run (gtest.cc:2816)
==13272==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13272==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13272==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13272==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13272==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13272==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13272== 
==13272== 884 (96 direct, 788 indirect) bytes in 1 blocks are definitely lost in loss record 13 of 13
==13272==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13272==    by 0x120A21: Move_ConstructorAndScore_Test::TestBody() (rh_tests.cpp:527)
==13272==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13272==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13272==    by 0x15E235: Run (gtest.cc:2508)
==13272==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13272==    by 0x15E394: Run (gtest.cc:2684)
==13272==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13272==    by 0x15E47C: Run (gtest.cc:2816)
==13272==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13272==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13272==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13272==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13272==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13272==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13272== 
==13272== LEAK SUMMARY:
==13272==    definitely lost: 192 bytes in 2 blocks
==13272==    indirectly lost: 1,248 bytes in 30 blocks
==13272==      possibly lost: 0 bytes in 0 blocks
==13272==    still reachable: 0 bytes in 0 blocks
==13272==         suppressed: 0 bytes in 0 blocks
==13272== 
==13272== For lists of detected and suppressed errors, rerun with: -s
==13272== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.22 sec
----------------------------------------------------------
Test Passed.
"Move.ConstructorAndScore" end time: Feb 25 05:17 UTC
"Move.ConstructorAndScore" time elapsed: 00:00:01
----------------------------------------------------------

52/60 Testing: BoardTest.PotentialMoves1
52/60 Test: BoardTest.PotentialMoves1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.PotentialMoves1"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"BoardTest.PotentialMoves1" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13273== Memcheck, a memory error detector
==13273== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13273== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13273== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.PotentialMoves1
==13273== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.PotentialMoves1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.PotentialMoves1
[       OK ] BoardTest.PotentialMoves1 (105 ms)
[----------] 1 test from BoardTest (112 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (134 ms total)
[  PASSED  ] 1 test.
==13273== 
==13273== HEAP SUMMARY:
==13273==     in use at exit: 0 bytes in 0 blocks
==13273==   total heap usage: 433 allocs, 433 frees, 130,648 bytes allocated
==13273== 
==13273== All heap blocks were freed -- no leaks are possible
==13273== 
==13273== For lists of detected and suppressed errors, rerun with: -s
==13273== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.22 sec
----------------------------------------------------------
Test Passed.
"BoardTest.PotentialMoves1" end time: Feb 25 05:17 UTC
"BoardTest.PotentialMoves1" time elapsed: 00:00:01
----------------------------------------------------------

53/60 Testing: BoardTest.PotentialMoves2
53/60 Test: BoardTest.PotentialMoves2
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.PotentialMoves2"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"BoardTest.PotentialMoves2" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13274== Memcheck, a memory error detector
==13274== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13274== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13274== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.PotentialMoves2
==13274== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.PotentialMoves2
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.PotentialMoves2
[       OK ] BoardTest.PotentialMoves2 (107 ms)
[----------] 1 test from BoardTest (114 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (136 ms total)
[  PASSED  ] 1 test.
==13274== 
==13274== HEAP SUMMARY:
==13274==     in use at exit: 0 bytes in 0 blocks
==13274==   total heap usage: 439 allocs, 439 frees, 131,354 bytes allocated
==13274== 
==13274== All heap blocks were freed -- no leaks are possible
==13274== 
==13274== For lists of detected and suppressed errors, rerun with: -s
==13274== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.35 sec
----------------------------------------------------------
Test Passed.
"BoardTest.PotentialMoves2" end time: Feb 25 05:17 UTC
"BoardTest.PotentialMoves2" time elapsed: 00:00:01
----------------------------------------------------------

54/60 Testing: BoardTest.NoPotentialMoves
54/60 Test: BoardTest.NoPotentialMoves
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.NoPotentialMoves"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"BoardTest.NoPotentialMoves" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13275== Memcheck, a memory error detector
==13275== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13275== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13275== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.NoPotentialMoves
==13275== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.NoPotentialMoves
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.NoPotentialMoves
[       OK ] BoardTest.NoPotentialMoves (85 ms)
[----------] 1 test from BoardTest (92 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (114 ms total)
[  PASSED  ] 1 test.
==13275== 
==13275== HEAP SUMMARY:
==13275==     in use at exit: 0 bytes in 0 blocks
==13275==   total heap usage: 430 allocs, 430 frees, 130,370 bytes allocated
==13275== 
==13275== All heap blocks were freed -- no leaks are possible
==13275== 
==13275== For lists of detected and suppressed errors, rerun with: -s
==13275== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"BoardTest.NoPotentialMoves" end time: Feb 25 05:17 UTC
"BoardTest.NoPotentialMoves" time elapsed: 00:00:01
----------------------------------------------------------

55/60 Testing: BoardTest.Undo1
55/60 Test: BoardTest.Undo1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.Undo1"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"BoardTest.Undo1" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13276== Memcheck, a memory error detector
==13276== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13276== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13276== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.Undo1
==13276== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.Undo1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.Undo1
[       OK ] BoardTest.Undo1 (157 ms)
[----------] 1 test from BoardTest (164 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (187 ms total)
[  PASSED  ] 1 test.
==13276== 
==13276== HEAP SUMMARY:
==13276==     in use at exit: 0 bytes in 0 blocks
==13276==   total heap usage: 505 allocs, 505 frees, 141,643 bytes allocated
==13276== 
==13276== All heap blocks were freed -- no leaks are possible
==13276== 
==13276== For lists of detected and suppressed errors, rerun with: -s
==13276== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.25 sec
----------------------------------------------------------
Test Passed.
"BoardTest.Undo1" end time: Feb 25 05:17 UTC
"BoardTest.Undo1" time elapsed: 00:00:01
----------------------------------------------------------

56/60 Testing: Solver.Basic
56/60 Test: Solver.Basic
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.Basic"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Solver.Basic" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13277== Memcheck, a memory error detector
==13277== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13277== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13277== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.Basic
==13277== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.Basic
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.Basic
==13277== Conditional jump or move depends on uninitialised value(s)
==13277==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13277==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13277==    by 0x1350AA: Solver::run() (solver.cpp:36)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x1222DB: Solver_Basic_Test::TestBody() (rh_tests.cpp:646)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277== 
...b..
...b..
aa.b.d
..cccd
......
......

d -2
==13277== Conditional jump or move depends on uninitialised value(s)
==13277==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13277==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13277==    by 0x135532: Solver::run() (solver.cpp:74)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x1222DB: Solver_Basic_Test::TestBody() (rh_tests.cpp:646)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277== 
...b.d
...b.d
.aab..
.ccc..
......
......

d 2
...b..
...b..
aa.b..
.ccc.d
.....d
......

c -1
...b..
...b.d
.aab.d
.ccc..
......
......

c -2
...b..
...b..
aa.b..
.ccc.d
.....d
......

a 1
...b..
...b.d
.aab.d
.ccc..
......
......

d -1
...b..
...b..
aa.b..
.ccc.d
.....d
......

d 1
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:646: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
...b..
...b..
aa.b.d
..cccd
......
......

 expected hasSol: true actual hasSol: false)
Expected: true
==13277== Conditional jump or move depends on uninitialised value(s)
==13277==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13277==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13277==    by 0x1350AA: Solver::run() (solver.cpp:36)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x12242D: Solver_Basic_Test::TestBody() (rh_tests.cpp:658)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277== 
...b..
...b..
aa.c.d
...c.d
......
......

d -2
==13277== Conditional jump or move depends on uninitialised value(s)
==13277==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13277==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13277==    by 0x135532: Solver::run() (solver.cpp:74)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x12242D: Solver_Basic_Test::TestBody() (rh_tests.cpp:658)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277== 
...b.d
...b.d
.aa...
...c..
...c..
......

d 2
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:658: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
...b..
...b..
aa.c.d
...c.d
......
......

 expected to have a solution of size 2actual solution size: 1
)
Expected: true
...b..
...b..
aa....
.....d
......
......

d -3
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:670: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
...b..
...b..
aa....
.....d
......
......

 expected to have a solution of size 0actual solution size: 1
)
Expected: true
......
.bb...
aac...
..c..e
..dd.e
......

e -3
......
...bbe
aac..e
..c...
dd....
......

e 1
..c...
bbc...
aa....
.....e
...dde
......

b 3
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:683: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
......
.bb...
aac...
..c..e
..dd.e
......

 expected to have a solution of size 2actual solution size: 1
)
Expected: true
[  FAILED  ] Solver.Basic (370 ms)
[----------] 1 test from Solver (377 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (402 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Solver.Basic

 1 FAILED TEST
==13277== 
==13277== HEAP SUMMARY:
==13277==     in use at exit: 9,248 bytes in 119 blocks
==13277==   total heap usage: 2,002 allocs, 1,883 frees, 425,251 bytes allocated
==13277== 
==13277== 192 bytes in 6 blocks are definitely lost in loss record 1 of 7
==13277==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13277==    by 0x135044: Solver::run() (solver.cpp:34)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x1222DB: Solver_Basic_Test::TestBody() (rh_tests.cpp:646)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13277== 
==13277== 192 bytes in 6 blocks are definitely lost in loss record 2 of 7
==13277==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13277==    by 0x135044: Solver::run() (solver.cpp:34)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x12242D: Solver_Basic_Test::TestBody() (rh_tests.cpp:658)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13277== 
==13277== 320 bytes in 10 blocks are definitely lost in loss record 3 of 7
==13277==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13277==    by 0x135044: Solver::run() (solver.cpp:34)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x1226C5: Solver_Basic_Test::TestBody() (rh_tests.cpp:683)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13277== 
==13277== 384 bytes in 12 blocks are definitely lost in loss record 4 of 7
==13277==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13277==    by 0x135044: Solver::run() (solver.cpp:34)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x122579: Solver_Basic_Test::TestBody() (rh_tests.cpp:670)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13277== 
==13277== 672 bytes in 7 blocks are definitely lost in loss record 5 of 7
==13277==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13277==    by 0x135458: Solver::run() (solver.cpp:70)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x12242D: Solver_Basic_Test::TestBody() (rh_tests.cpp:658)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13277== 
==13277== 2,496 bytes in 26 blocks are definitely lost in loss record 6 of 7
==13277==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13277==    by 0x135458: Solver::run() (solver.cpp:70)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x1226C5: Solver_Basic_Test::TestBody() (rh_tests.cpp:683)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13277== 
==13277== 4,992 bytes in 52 blocks are definitely lost in loss record 7 of 7
==13277==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13277==    by 0x135458: Solver::run() (solver.cpp:70)
==13277==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13277==    by 0x1222DB: Solver_Basic_Test::TestBody() (rh_tests.cpp:646)
==13277==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13277==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15E235: Run (gtest.cc:2508)
==13277==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13277==    by 0x15E394: Run (gtest.cc:2684)
==13277==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13277==    by 0x15E47C: Run (gtest.cc:2816)
==13277==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13277==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13277==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13277==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13277==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13277==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13277== 
==13277== LEAK SUMMARY:
==13277==    definitely lost: 9,248 bytes in 119 blocks
==13277==    indirectly lost: 0 bytes in 0 blocks
==13277==      possibly lost: 0 bytes in 0 blocks
==13277==    still reachable: 0 bytes in 0 blocks
==13277==         suppressed: 0 bytes in 0 blocks
==13277== 
==13277== Use --track-origins=yes to see where uninitialised values come from
==13277== For lists of detected and suppressed errors, rerun with: -s
==13277== ERROR SUMMARY: 87 errors from 11 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.56 sec
----------------------------------------------------------
Test Failed.
"Solver.Basic" end time: Feb 25 05:17 UTC
"Solver.Basic" time elapsed: 00:00:01
----------------------------------------------------------

57/60 Testing: Solver.Difficult
57/60 Test: Solver.Difficult
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.Difficult"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Solver.Difficult" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13278== Memcheck, a memory error detector
==13278== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13278== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13278== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.Difficult
==13278== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.Difficult
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.Difficult
==13278== Conditional jump or move depends on uninitialised value(s)
==13278==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13278==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13278==    by 0x1350AA: Solver::run() (solver.cpp:36)
==13278==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13278==    by 0x122AF3: Solver_Difficult_Test::TestBody() (rh_tests.cpp:700)
==13278==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13278==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15E235: Run (gtest.cc:2508)
==13278==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13278==    by 0x15E394: Run (gtest.cc:2684)
==13278==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13278==    by 0x15E47C: Run (gtest.cc:2816)
==13278==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13278==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13278==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13278==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13278== 
......
......
.aab..
.ccb.d
.e.b.d
.eff.d

f 1
==13278== Conditional jump or move depends on uninitialised value(s)
==13278==    at 0x13B420: IndirectHeuristic::compute(Board const&) (heur.cpp:94)
==13278==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13278==    by 0x135532: Solver::run() (solver.cpp:74)
==13278==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13278==    by 0x122AF3: Solver_Difficult_Test::TestBody() (rh_tests.cpp:700)
==13278==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13278==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15E235: Run (gtest.cc:2508)
==13278==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13278==    by 0x15E394: Run (gtest.cc:2684)
==13278==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13278==    by 0x15E47C: Run (gtest.cc:2816)
==13278==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13278==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13278==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13278==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13278== 
.....d
...b.d
aa.b.d
cc.b..
.e....
.e.ff.

a -1
......
...b..
.aab..
.ccb.d
.e...d
.eff.d

d -1
.....d
...b.d
aa.b.d
cc.b..
.e....
.e.ff.

b -1
......
...b..
.aab..
.ccb.d
.e...d
.eff.d

b -2
.....d
...b.d
aa.b.d
cc.b..
.e....
.e.ff.

c -1
......
...b..
.aab..
.ccb.d
.e...d
.eff.d

d -2
.....d
...b.d
aa.b.d
cc.b..
.e....
.e.ff.

d -3
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:700: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
......
......
.aab..
.ccb.d
.e.b.d
.eff.d

 expected hasSol: true actual hasSol: false)
Expected: true
[  FAILED  ] Solver.Difficult (305 ms)
[----------] 1 test from Solver (313 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (341 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Solver.Difficult

 1 FAILED TEST
==13278== 
==13278== HEAP SUMMARY:
==13278==     in use at exit: 6,752 bytes in 75 blocks
==13278==   total heap usage: 1,620 allocs, 1,545 frees, 344,899 bytes allocated
==13278== 
==13278== 224 bytes in 7 blocks are definitely lost in loss record 1 of 2
==13278==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13278==    by 0x135044: Solver::run() (solver.cpp:34)
==13278==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13278==    by 0x122AF3: Solver_Difficult_Test::TestBody() (rh_tests.cpp:700)
==13278==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13278==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15E235: Run (gtest.cc:2508)
==13278==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13278==    by 0x15E394: Run (gtest.cc:2684)
==13278==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13278==    by 0x15E47C: Run (gtest.cc:2816)
==13278==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13278==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13278==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13278==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13278==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13278== 
==13278== 6,528 bytes in 68 blocks are definitely lost in loss record 2 of 2
==13278==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13278==    by 0x135458: Solver::run() (solver.cpp:70)
==13278==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13278==    by 0x122AF3: Solver_Difficult_Test::TestBody() (rh_tests.cpp:700)
==13278==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13278==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15E235: Run (gtest.cc:2508)
==13278==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13278==    by 0x15E394: Run (gtest.cc:2684)
==13278==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13278==    by 0x15E47C: Run (gtest.cc:2816)
==13278==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13278==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13278==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13278==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13278==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13278==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13278== 
==13278== LEAK SUMMARY:
==13278==    definitely lost: 6,752 bytes in 75 blocks
==13278==    indirectly lost: 0 bytes in 0 blocks
==13278==      possibly lost: 0 bytes in 0 blocks
==13278==    still reachable: 0 bytes in 0 blocks
==13278==         suppressed: 0 bytes in 0 blocks
==13278== 
==13278== Use --track-origins=yes to see where uninitialised values come from
==13278== For lists of detected and suppressed errors, rerun with: -s
==13278== ERROR SUMMARY: 78 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.46 sec
----------------------------------------------------------
Test Failed.
"Solver.Difficult" end time: Feb 25 05:17 UTC
"Solver.Difficult" time elapsed: 00:00:01
----------------------------------------------------------

58/60 Testing: Solver.InBoard10x10
58/60 Test: Solver.InBoard10x10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.InBoard10x10"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Solver.InBoard10x10" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13279== Memcheck, a memory error detector
==13279== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13279== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13279== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.InBoard10x10
==13279== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.InBoard10x10
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.InBoard10x10
==13279== Conditional jump or move depends on uninitialised value(s)
==13279==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13279==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13279==    by 0x1350AA: Solver::run() (solver.cpp:36)
==13279==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13279==    by 0x122D27: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==13279==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13279==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15E235: Run (gtest.cc:2508)
==13279==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13279==    by 0x15E394: Run (gtest.cc:2684)
==13279==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13279==    by 0x15E47C: Run (gtest.cc:2816)
==13279==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13279==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13279==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13279==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13279== 
..........
ffbbmm....
..cg.e....
..cg.e....
.jjjj.....
.hhh.nnnnn
...k......
aa.k......
...k......
...k......

n -1
==13279== Conditional jump or move depends on uninitialised value(s)
==13279==    at 0x13B2CA: IndirectHeuristic::compute(Board const&) (heur.cpp:61)
==13279==    by 0x13B6DF: Move::score(Heuristic*) (move.cpp:51)
==13279==    by 0x135532: Solver::run() (solver.cpp:74)
==13279==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13279==    by 0x122D27: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==13279==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13279==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15E235: Run (gtest.cc:2508)
==13279==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13279==    by 0x15E394: Run (gtest.cc:2684)
==13279==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13279==    by 0x15E47C: Run (gtest.cc:2816)
==13279==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13279==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13279==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13279==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13279== 
..........
ffbb...mm.
..cg......
..cg.e....
jjjj.e....
.hhhnnnnn.
...k......
.aak......
...k......
...k......

m 2
..........
ff...bbmm.
..cg.e....
..cg.e....
.jjjj.....
hhh..nnnnn
...k......
aa.k......
...k......
...k......

j 1
..........
ffbb....mm
..cg......
..cg.e....
jjjj.e....
.hhhnnnnn.
...k......
.aak......
...k......
...k......

j 2
..........
ff...bbmm.
..cg.e....
..cg.e....
.jjjj.....
hhh..nnnnn
...k......
aa.k......
...k......
...k......

e 1
..........
ffbb....mm
..cg......
..cg.e....
jjjj.e....
.hhhnnnnn.
...k......
.aak......
...k......
...k......

j 4
..........
ff...bbmm.
..cg.e....
..cg.e....
.jjjj.....
hhh..nnnnn
...k......
aa.k......
...k......
...k......

h 1
..........
ffbb....mm
..cg......
..cg.e....
jjjj.e....
.hhhnnnnn.
...k......
.aak......
...k......
...k......

h -1
..........
ff...bbmm.
..cg.e....
..cg.e....
.jjjj.....
hhh..nnnnn
...k......
aa.k......
...k......
...k......

a 1
..........
ffbb....mm
..cg......
..cg.e....
jjjj.e....
.hhhnnnnn.
...k......
.aak......
...k......
...k......

m 3
..........
ff...bbmm.
..cg.e....
..cg.e....
.jjjj.....
hhh..nnnnn
...k......
aa.k......
...k......
...k......

m 1
..........
ffbb....mm
..cg......
..cg.e....
jjjj.e....
.hhhnnnnn.
...k......
.aak......
...k......
...k......

j 5
..........
ff...bbmm.
..cg.e....
..cg.e....
.jjjj.....
hhh..nnnnn
...k......
aa.k......
...k......
...k......

j 3
..........
ffbb....mm
..cg......
..cg.e....
jjjj.e....
.hhhnnnnn.
...k......
.aak......
...k......
...k......

m 4
..........
ff...bbmm.
..cg.e....
..cg.e....
.jjjj.....
hhh..nnnnn
...k......
aa.k......
...k......
...k......

j -1
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:720: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
..........
ffbbmm....
..cg.e....
..cg.e....
.jjjj.....
.hhh.nnnnn
...k......
aa.k......
...k......
...k......

 expected hasSol: true actual hasSol: false)
Expected: true
[  FAILED  ] Solver.InBoard10x10 (837 ms)
[----------] 1 test from Solver (845 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (867 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Solver.InBoard10x10

 1 FAILED TEST
==13279== 
==13279== HEAP SUMMARY:
==13279==     in use at exit: 28,000 bytes in 301 blocks
==13279==   total heap usage: 4,942 allocs, 4,641 frees, 1,027,260 bytes allocated
==13279== 
==13279== 448 bytes in 14 blocks are definitely lost in loss record 1 of 2
==13279==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13279==    by 0x135044: Solver::run() (solver.cpp:34)
==13279==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13279==    by 0x122D27: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==13279==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13279==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15E235: Run (gtest.cc:2508)
==13279==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13279==    by 0x15E394: Run (gtest.cc:2684)
==13279==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13279==    by 0x15E47C: Run (gtest.cc:2816)
==13279==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13279==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13279==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13279==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13279==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13279== 
==13279== 27,552 bytes in 287 blocks are definitely lost in loss record 2 of 2
==13279==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13279==    by 0x135458: Solver::run() (solver.cpp:70)
==13279==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13279==    by 0x122D27: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==13279==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13279==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15E235: Run (gtest.cc:2508)
==13279==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13279==    by 0x15E394: Run (gtest.cc:2684)
==13279==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13279==    by 0x15E47C: Run (gtest.cc:2816)
==13279==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13279==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13279==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13279==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13279==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13279==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13279== 
==13279== LEAK SUMMARY:
==13279==    definitely lost: 28,000 bytes in 301 blocks
==13279==    indirectly lost: 0 bytes in 0 blocks
==13279==      possibly lost: 0 bytes in 0 blocks
==13279==    still reachable: 0 bytes in 0 blocks
==13279==         suppressed: 0 bytes in 0 blocks
==13279== 
==13279== Use --track-origins=yes to see where uninitialised values come from
==13279== For lists of detected and suppressed errors, rerun with: -s
==13279== ERROR SUMMARY: 304 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.93 sec
----------------------------------------------------------
Test Failed.
"Solver.InBoard10x10" end time: Feb 25 05:17 UTC
"Solver.InBoard10x10" time elapsed: 00:00:01
----------------------------------------------------------

59/60 Testing: Solver.Direct
59/60 Test: Solver.Direct
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.Direct"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Solver.Direct" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13280== Memcheck, a memory error detector
==13280== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13280== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13280== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.Direct
==13280== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.Direct
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.Direct
..bb..
..c...
aac...
.dd..e
.....e
......

e -3
bb....
..c..e
aac..e
.dd...
......
......

e 1
..cbb.
..c...
aa....
...dde
.....e
......

b -1
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:735: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
..bb..
..c...
aac...
.dd..e
.....e
......

 expected to have a solution of size 2actual solution size: 1
)
Expected: true
bbc..d
efc.gd
efaagd
hiijkk
hm.j..
.m.nnn

n -1
bbc.gd
efc.gd
efaa.d
.iijkk
hm.j..
hmnnn.

h 1
bbc.gd
.fc.gd
ef.aad
eiijkk
hm.j..
hm.nnn

g -1
/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests.cpp:750: Failure
Value of: runAndVerifySolution(boardLayout, &h, true, optimalSolutionSize)
  Actual: false (
For board:
bbc..d
efc.gd
efaagd
hiijkk
hm.j..
.m.nnn

 expected hasSol: true actual hasSol: false)
Expected: true
[  FAILED  ] Solver.Direct (281 ms)
[----------] 1 test from Solver (287 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (310 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Solver.Direct

 1 FAILED TEST
==13280== 
==13280== HEAP SUMMARY:
==13280==     in use at exit: 3,936 bytes in 49 blocks
==13280==   total heap usage: 1,222 allocs, 1,173 frees, 267,912 bytes allocated
==13280== 
==13280== 64 bytes in 2 blocks are definitely lost in loss record 1 of 4
==13280==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13280==    by 0x135044: Solver::run() (solver.cpp:34)
==13280==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13280==    by 0x1230A7: Solver_Direct_Test::TestBody() (rh_tests.cpp:750)
==13280==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13280==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15E235: Run (gtest.cc:2508)
==13280==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13280==    by 0x15E394: Run (gtest.cc:2684)
==13280==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13280==    by 0x15E47C: Run (gtest.cc:2816)
==13280==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13280==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13280==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13280==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13280==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13280== 
==13280== 320 bytes in 10 blocks are definitely lost in loss record 2 of 4
==13280==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13280==    by 0x135044: Solver::run() (solver.cpp:34)
==13280==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13280==    by 0x122F5B: Solver_Direct_Test::TestBody() (rh_tests.cpp:735)
==13280==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13280==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15E235: Run (gtest.cc:2508)
==13280==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13280==    by 0x15E394: Run (gtest.cc:2684)
==13280==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13280==    by 0x15E47C: Run (gtest.cc:2816)
==13280==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13280==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13280==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13280==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13280==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13280== 
==13280== 1,248 bytes in 13 blocks are definitely lost in loss record 3 of 4
==13280==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13280==    by 0x135458: Solver::run() (solver.cpp:70)
==13280==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13280==    by 0x1230A7: Solver_Direct_Test::TestBody() (rh_tests.cpp:750)
==13280==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13280==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15E235: Run (gtest.cc:2508)
==13280==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13280==    by 0x15E394: Run (gtest.cc:2684)
==13280==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13280==    by 0x15E47C: Run (gtest.cc:2816)
==13280==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13280==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13280==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13280==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13280==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13280== 
==13280== 2,304 bytes in 24 blocks are definitely lost in loss record 4 of 4
==13280==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13280==    by 0x135458: Solver::run() (solver.cpp:70)
==13280==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13280==    by 0x122F5B: Solver_Direct_Test::TestBody() (rh_tests.cpp:735)
==13280==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13280==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15E235: Run (gtest.cc:2508)
==13280==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13280==    by 0x15E394: Run (gtest.cc:2684)
==13280==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13280==    by 0x15E47C: Run (gtest.cc:2816)
==13280==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13280==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13280==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13280==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13280==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13280==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13280== 
==13280== LEAK SUMMARY:
==13280==    definitely lost: 3,936 bytes in 49 blocks
==13280==    indirectly lost: 0 bytes in 0 blocks
==13280==      possibly lost: 0 bytes in 0 blocks
==13280==    still reachable: 0 bytes in 0 blocks
==13280==         suppressed: 0 bytes in 0 blocks
==13280== 
==13280== For lists of detected and suppressed errors, rerun with: -s
==13280== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.63 sec
----------------------------------------------------------
Test Failed.
"Solver.Direct" end time: Feb 25 05:17 UTC
"Solver.Direct" time elapsed: 00:00:01
----------------------------------------------------------

60/60 Testing: Solver.UnSolvable1
60/60 Test: Solver.UnSolvable1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.UnSolvable1"
Directory: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests
"Solver.UnSolvable1" start time: Feb 25 05:17 UTC
Output:
----------------------------------------------------------
==13281== Memcheck, a memory error detector
==13281== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13281== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13281== Command: /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.UnSolvable1
==13281== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.UnSolvable1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.UnSolvable1
...b..
...b..
aa.c..
...c.d
...c..
eeeee.

e 1
...b..
...b.d
.aac..
...c..
...c..
.eeeee

d -2
...b..
...b..
aa.c..
...c.d
...c..
eeeee.

d 1
...b..
...b.d
.aac..
...c..
...c..
.eeeee

d 2
...b..
...b..
aa.c..
...c.d
...c..
eeeee.

a 1
...b..
...b.d
.aac..
...c..
...c..
.eeeee

d -3
...b..
...b..
aa.c..
...c.d
...c..
eeeee.

d -1
...b..
...b..
aa.b..
...b.d
......
eee...

e 3
......
...b.d
.aab..
...b..
...b..
...eee

d -3
...b..
...b..
aa.b..
...b.d
......
eee...

b 2
......
...b.d
.aab..
...b..
...b..
...eee

d 1
...b..
...b..
aa.b..
...b.d
......
eee...

a 1
......
...b.d
.aab..
...b..
...b..
...eee

d 2
...b..
...b..
aa.b..
...b.d
......
eee...

b 1
......
...b.d
.aab..
...b..
...b..
...eee

e 1
...b..
...b..
aa.b..
...b.d
......
eee...

d -2
......
...b.d
.aab..
...b..
...b..
...eee

d -1
...b..
...b..
aa.b..
...b.d
......
eee...

e 2
[       OK ] Solver.UnSolvable1 (329 ms)
[----------] 1 test from Solver (335 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (358 ms total)
[  PASSED  ] 1 test.
==13281== 
==13281== HEAP SUMMARY:
==13281==     in use at exit: 15,584 bytes in 173 blocks
==13281==   total heap usage: 2,788 allocs, 2,615 frees, 587,853 bytes allocated
==13281== 
==13281== 192 bytes in 6 blocks are definitely lost in loss record 1 of 4
==13281==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13281==    by 0x135044: Solver::run() (solver.cpp:34)
==13281==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13281==    by 0x12338B: Solver_UnSolvable1_Test::TestBody() (rh_tests.cpp:767)
==13281==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13281==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15E235: Run (gtest.cc:2508)
==13281==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13281==    by 0x15E394: Run (gtest.cc:2684)
==13281==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13281==    by 0x15E47C: Run (gtest.cc:2816)
==13281==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13281==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13281==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13281==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13281==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13281== 
==13281== 320 bytes in 10 blocks are definitely lost in loss record 2 of 4
==13281==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13281==    by 0x135044: Solver::run() (solver.cpp:34)
==13281==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13281==    by 0x1234D7: Solver_UnSolvable1_Test::TestBody() (rh_tests.cpp:779)
==13281==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13281==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15E235: Run (gtest.cc:2508)
==13281==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13281==    by 0x15E394: Run (gtest.cc:2684)
==13281==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13281==    by 0x15E47C: Run (gtest.cc:2816)
==13281==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13281==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13281==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13281==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13281==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13281== 
==13281== 4,416 bytes in 46 blocks are definitely lost in loss record 3 of 4
==13281==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13281==    by 0x135458: Solver::run() (solver.cpp:70)
==13281==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13281==    by 0x12338B: Solver_UnSolvable1_Test::TestBody() (rh_tests.cpp:767)
==13281==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13281==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15E235: Run (gtest.cc:2508)
==13281==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13281==    by 0x15E394: Run (gtest.cc:2684)
==13281==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13281==    by 0x15E47C: Run (gtest.cc:2816)
==13281==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13281==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13281==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13281==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13281==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13281== 
==13281== 10,656 bytes in 111 blocks are definitely lost in loss record 4 of 4
==13281==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13281==    by 0x135458: Solver::run() (solver.cpp:70)
==13281==    by 0x11C00D: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==13281==    by 0x1234D7: Solver_UnSolvable1_Test::TestBody() (rh_tests.cpp:779)
==13281==    by 0x16ABA0: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==13281==    by 0x16ABA0: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15E235: Run (gtest.cc:2508)
==13281==    by 0x15E235: testing::Test::Run() (gtest.cc:2498)
==13281==    by 0x15E394: Run (gtest.cc:2684)
==13281==    by 0x15E394: testing::TestInfo::Run() (gtest.cc:2657)
==13281==    by 0x15E47C: Run (gtest.cc:2816)
==13281==    by 0x15E47C: testing::TestSuite::Run() (gtest.cc:2795)
==13281==    by 0x15E99B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==13281==    by 0x16B110: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==13281==    by 0x16B110: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==13281==    by 0x15EBCB: testing::UnitTest::Run() (gtest.cc:4925)
==13281==    by 0x11B573: main (in /work/hw-melgart/hw3/hw3_stu_tests/rh_tests/rh_tests)
==13281== 
==13281== LEAK SUMMARY:
==13281==    definitely lost: 15,584 bytes in 173 blocks
==13281==    indirectly lost: 0 bytes in 0 blocks
==13281==      possibly lost: 0 bytes in 0 blocks
==13281==    still reachable: 0 bytes in 0 blocks
==13281==         suppressed: 0 bytes in 0 blocks
==13281== 
==13281== For lists of detected and suppressed errors, rerun with: -s
==13281== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.54 sec
----------------------------------------------------------
Test Passed.
"Solver.UnSolvable1" end time: Feb 25 05:17 UTC
"Solver.UnSolvable1" time elapsed: 00:00:01
----------------------------------------------------------

End testing: Feb 25 05:17 UTC
